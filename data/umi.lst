declare (
  coarse: uint 32
  fine  : uint 8
)

enum DaSS (
  0 = "no value"
  1 = "same value"
  2 = "new value"
  3 = "latest value"
  4 = "unavailable"
)

enum State (
  1     = missing
  2     = dead
  4     = offScaleHigh
  8     = offScaleLow
  16    = static
  128   = unavailable
  2048  = exception
  8192  = change
  32768 = override

)

enum Type (
  1  = "int32"
  2  = "float64"
  3  = "binary8"
  4  = "reference"
  5  = "string8"
  6  = "long"
  7  = "decimal"
  8  = "real"
  9  = "exponent"
  10 = "time"
  11 = "datetime"
  12 = "stringN"
  13 = "binaryN"
  14 = "bit"
)

block time (
  coarse
  fine
)

block pid (
  dass  : uint 8, DaSS
  orbit : uint 16
  state : uint 16, State
  code  : bytes 48
)

block about (
  type  : uint 8, Type
  length: uint 16
  unit  : uint 16
)

data(
  size  : uint 32

  include pid
  include about
  include time

  match type with (
    1, 6  = (
      param: int
    )
    5 = (
      param: string
    )
    2, 7, 8, 9 = (
      param: float
    )
  )
)
