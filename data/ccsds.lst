enum Type (
  0 = system
  1 = payload
)

enum Segmentation (
  0 = continuation
  1 = start
  2 = stop
  3 = unsegmented
)

enum PacketType (
  0 = Default
  1 = DataDump
  2 = DataSegument
  3 = EssentialHK
  4 = SystemHK
  5 = PayloadHK
  6 = ScienceData
  7 = AncillaryData
  8 = EssentialCmd
  9 = PayloadCmd
  10 = DataLoad
  11 = Response
  12 = Report
  13 = Exception
  14 = Acknowledge
)

enum TimeType (
  0 = NotUsed
  1 = Generated
  2 = Executed
  3 = Invalid
)

declare (
  coarse[type=u32]
  fine[type=u8]
)

define (
  Version = 0
)

block pid (
  version[numbit=3]
  type[numbit=1, transform=Type]
  second[numbit=1]
  apid[numbit=11, type=u16]
)

block segment (
  segment[numbit=2, transform=Segmentation]
  sequence[numbit=14, type=u16]
)

block secondary (
  coarse
  fine
  timeid[numbit=2, transform=TimeType]
  checksum[numbit=1]
  spare[numbit=1]
  packid[numbit=4, transform=PacketType]
  sid[numbit=32, type=u32]
)

block private (
  src[type=u8]
  dst[type=u8]
  class[type=u8]
  type[type=u8]
)

data (
  include pid
  include segment
  length[type=u16]

  include[second==1] secondary
  include private

  del coarse
  del fine
  del src dst
)
