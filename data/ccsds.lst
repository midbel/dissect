enum Type (
  0 = system
  1 = payload
)

enum Segmentation (
  0 = continuation
  1 = start
  2 = stop
  3 = unsegmented
)

enum PacketType (
  0 = Default
  1 = DataDump
  2 = DataSegument
  3 = EssentialHK
  4 = SystemHK
  5 = PayloadHK
  6 = ScienceData
  7 = AncillaryData
  8 = EssentialCmd
  9 = PayloadCmd
  10 = DataLoad
  11 = Response
  12 = Report
  13 = Exception
  14 = Acknowledge
)

enum TimeType (
  0 = NotUsed
  1 = Generated
  2 = Executed
  3 = Invalid
)

declare (
  coarse: uint 32
  fine  : uint 8
)

define (
  Version = 0
)

block pid (
  version: 3
  type   : 1, Type
  second : 1
  apid   : uint 11
)

block segment (
  segment: 2, Segmentation
  sequence: uint 14
)

block secondary (
  coarse
  fine
  timeid  : 2, TimeType
  checksum: 1
  spare   : 1
  packid  : 4, PacketType
  sid     : uint 32
)

block private (
  src  : uint 8
  dst  : uint 8
  klass: uint 8
  type : uint 8
)

data (
  include pid
  include segment
  length: uint 16

  include[second==1] secondary
  include private
)
